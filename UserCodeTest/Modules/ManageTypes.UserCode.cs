///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace UserCodeTest.Modules
{
    public partial class ManageTypes
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
        	
        	Delay.SpeedFactor = 5.00;  /// Playback speed
        	
        									/// Add Sample Type 
        									
        	Report.Log(ReportLevel.Info, "Mouse", "Click button 'Add Sample Type'", new RecordItemIndex(0));
        	repo.SampleTypesEditor.AddSampleType.Click();
        	
        									/// Change Name New Sample Type
        	
        	Report.Log(ReportLevel.Info, "Keyboard", "Enter Text", new RecordItemIndex(1));
        	repo.SampleTypesEditor.SomeElement.Click();    /// Click on new field
        	Keyboard.Press("{LControlKey down}{Akey}");    /// Select area
        	Keyboard.Press("Test00");					   /// Enter text
        	
        									/// Validate Name
        	
			Report.Log(ReportLevel.Info, "Validate", "Name Inherent Type", new RecordItemIndex(2));        									
        	Validate.Attribute(repo.SampleTypesEditor.Test00Info, "Text", "Test00");
        	
        									/// Choose Inherent Type
        	
        	Report.Log(ReportLevel.Info, "Mouse", "Choose Inherent Type", new RecordItemIndex(3));
        	repo.SampleTypesEditor.ToggleButton.Click();	/// Open ContextMenu
        	repo.SampleTypesEditor.Calibrator.Click();		/// Choose Inherent Type
        	
        									/// Validate Inherent Type
        	
			Report.Log(ReportLevel.Info, "Validate", "Inherent Type", new RecordItemIndex(4));        									
        	Validate.Attribute(repo.SampleTypesEditor.CalibratorInfo, "Text", "Calibrator");
        	
        									/// Change Color
        	
        	Report.Log(ReportLevel.Info, "Mouse", "Choose Color", new RecordItemIndex(5));
        	repo.SampleTypesEditor.SomeContainer.Click();
        	repo.SampleTypesEditor.Text0.Click();
        	
        	Report.Log(ReportLevel.Info, "Keyboard", "Choose Color", new RecordItemIndex(6));
        	Keyboard.Press("{LControlKey down}{Akey}{LControlKey up}150");			/// Change color R
           	Keyboard.Press("{Tab}{LControlKey down}{Akey}{LControlKey up}150");		/// Change color G
        	Keyboard.Press("{Tab}{LControlKey down}{Akey}{LControlKey up}150");		/// Change color B
        	Keyboard.Press("{Escape}");
        									/// Validate Color Change 
        	
        	Report.Log(ReportLevel.Info, "Validate", "Color Change", new RecordItemIndex(7));
        	Validate.Attribute(repo.SampleTypesEditor.SelectedColorTextInfo, "Text", "LightSlateGray");
        	
        									/// Save all
        	
        	Report.Log(ReportLevel.Info, "Mouse", "Click button 'Ok'", new RecordItemIndex(8));
        	repo.SampleTypesEditor.ButtonOK.Click();

        									/// Validate Sample"Test00"
 			Report.Log(ReportLevel.Info, "Validate", "Sample'Test00'", new RecordItemIndex(9));         									
        	Mouse.ScrollWheel(-360);
        	Validate.Attribute(repo.NewProtocolWizard.SomeContainer.Test00Info, "Text", "Test00");
        	
        									/// Click Manage Types
            
            Report.Log(ReportLevel.Info, "Mouse", "Left Click Button 'Manage Types'", new RecordItemIndex(10));
            repo.NewProtocolWizard.SomeContainer.AdvancedViewButton.Click();
            
        									/// Delete Sample Type
        	        									
			Report.Log(ReportLevel.Info, "Mouse", "Click button 'Delete'", new RecordItemIndex(11));
			repo.SampleTypesEditor1.Button.Click();
		
        									/// Validate Delete 
        	
        	Report.Log(ReportLevel.Info, "Validate", "Delete Test00", new RecordItemIndex(12)); 
        	Validate.NotExists(repo.SampleTypesEditor1.ButtonInfo);
        	
        									/// Save all
        	
        	Report.Log(ReportLevel.Info, "Mouse", "Click button 'Ok'", new RecordItemIndex(13));
        	repo.SampleTypesEditor.ButtonOK.Click();
        	
        									/// Validate Delete 
        	
			Report.Log(ReportLevel.Info, "Validate", "Delete Test00", new RecordItemIndex(14));        									
        	Validate.NotExists(repo.NewProtocolWizard.SomeContainer.Test00Info);
        	
        									/// Close New Protocol Wizard
        									
        	Report.Log(ReportLevel.Info, "Mouse", "Click button 'X' (Close 'New Protocol Wizard)", new RecordItemIndex(15));
        	repo.NewProtocolWizard.Close.Click();
        	
        									/// Exit The Program
        			
        	Report.Log(ReportLevel.Info, "Mouse", "Click button 'X' (Exit The Program)", new RecordItemIndex(16));
        	repo.MyAssaysExplorer.Quit.Click();
        }

    }
}